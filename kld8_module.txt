# Modeule:
Modules are the way we have in JavaScript to split our code in different files, keeping our code concise and well organized.

A module is just a file. One script is one module. As simple as that.

Modules can load each other and use special directives
export and import to interchange functionality, call functions of one module from another one:

export keyword labels variables and functions that should be accessible from outside the current module.
import allows the import of functionality from other modules.

for Eg:

// üìÅ sayHi.js
export function sayHi(user) {
  alert(`Hello, ${user}!`);
}

// üìÅ main.js
import {sayHi} from './sayHi.js';

alert(sayHi); // function...
sayHi('John'); // Hello, John!
The import directive loads the module by path ./sayHi.js relative to the current file, and assigns exported function sayHi to the corresponding variable.

Modules can be ‚Äúrequired‚Äù or ‚Äúimported‚Äù from other modules, that way we can reuse their functionality and compose our apps and libraries.
A module may contain a class or a library of functions for a specific purpose.

"require" and "import" are key terms when we speak about modules,
 they define the two most popular ways of using JavaScript modules nowadays.

 